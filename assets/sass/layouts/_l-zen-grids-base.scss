/**
 * @file
 * Positioning for responsive layout.
 *
 * Define CSS classes to create a table-free, 3-column, 2-column, or single
 * column layout depending on whether blocks are enabled in the left or right
 * columns.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */


// We are going to create a 980px wide, 12 column grid with 48px gutters between
// columns (applied as 24px of left/right padding on each column).
$zen-column-count:  12;
$zen-gutter-width:  60px;

// If you need IE6/7 support for box-sizing: border-box (default), see _base.scss
//$zen-box-sizing: content-box;


// You can generate more efficient CSS if you manually apply the
// zen-grid-item-base mixin to all grid items from within a single ruleset.
$zen-auto-include-item-base: true;
$zen-auto-include-flow-item-base: false;


// Suppress this section of CSS for RTL layouts since it contains no LTR-specific styles.
@if $zen-reverse-all-floats == false {

/*
 * Center the page.
 */

.container {
  /* For screen sizes larger than 1200px, prevent excessively long lines of text
     by setting a max-width. */
  margin-left: auto;
  margin-right: auto;
  min-width: 260px; /* enforces a min-width in FF. */
	max-width: 1240px;
}

/*
 * Apply the shared properties of grid items in a single, efficient ruleset.
 */
// See the note about $zen-auto-include-item-base above.

//.container,
//.grid-item {
//  @include zen-grid-item-base();
//}

/*
 * Containers for grid items and flow items.
 */

.container {
  @include zen-grid-container();
}

} // End of @if $zen-reverse-all-floats == true


/* =============================================================================
   General Page layout
   ========================================================================== */

.l-main-content {
	@include zen-clear();
	@include slug(1, 1);
	@include zen-grid-item(12, 1);
	@include breakpoint($md-lg) {
		@include zen-grid-item(8, 1);
	}
}
.l-rail {
	@include zen-clear();
	@include slug(0, 1);
	@include zen-grid-item(12, 1);
	@include breakpoint($md-lg) {
		@include zen-clear(none);	
		@include slug(1, 1);
		@include zen-grid-item(4, 9);
	}
}


/* =============================================================================
   Blog Page layout
   ========================================================================== */

.l-blog-main-content {
	@include zen-clear();
	@include slug(1, 1);
	@include zen-grid-item(12, 1);
	@include breakpoint($md-lg) {
		@include zen-grid-item(8, 1, right);
	}
}
.l-blog-rail {
	@include zen-clear();
	@include slug(0, 1);
	@include zen-grid-item(12, 1);
	@include breakpoint($md-lg) {
		@include zen-clear(none);	
		@include slug(1, 1);
		@include zen-grid-item(4, 1);
	}
}


/* =============================================================================
   Landing Page layout
   ========================================================================== */

// for wide sections of content
.l-main-content-wide {
	@include zen-clear();
	@include slug(1, 1);
}
